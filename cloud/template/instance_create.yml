AWSTemplateFormatVersion: '2010-09-09'
Description: Provisions a single-tenant environment.

# Param fields
Parameters:
  InstanceDBName:
    Type: String
    Description: Instance DB name.
  InstanceDBPassword:
    Type: String
    NoEcho: true
    Description: Instance DB Password.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${InstanceDBName}-VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${InstanceDBName}-Public-Subnet

  # EC2 Instance now has a hardcoded instance type.
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro # Hardcoded instance type
      ImageId: ami-0c55b159cbfafe1f0 # Amazon Linux 2 AMI (change per region)
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds: [!Ref WebSecurityGroup]
      UserData: !Base64
        # The UserData script now uses a fixed GitHub repository.
        !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install -y php7.4
          yum install -y httpd git

          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer

          # Clones from the fixed repository.
          git clone https://github.com/noorfikri/kp_asri.git -b main /var/www/html

          cd /var/www/html
          composer install --no-dev --optimize-autoloader
          cp .env.example .env
          php artisan key:generate

          # Use the dynamic DB name and password passed as parameters.
          sed -i "s/DB_HOST=127.0.0.1/DB_HOST=${DB.Endpoint.Address}/g" .env # This line is not changed as it refers to the DB resource, not a parameter.
          sed -i "s/DB_DATABASE=laravel/DB_DATABASE=${InstanceDBName}/g" .env
          sed -i "s/DB_USERNAME=root/DB_USERNAME=admin/g" .env
          sed -i "s/DB_PASSWORD=/DB_PASSWORD=${InstanceDBPassword}/g" .env

          php artisan migrate --seed --force

          chown -R apache:apache /var/www/html
          chmod -R 755 /var/www/html/storage # This line is not changed as it refers to a directory.

          systemctl start httpd
          systemctl enable httpd
      Tags:
        - Key: Name
          Value: !Sub ${TenantDBName}-WebServer

  # RDS Instance also has a hardcoded instance class.
  DB:
    Type: AWS::RDS::DBInstance
    Properties: # This block is not changed as it refers to the DB resource.
      DBName: !Ref InstanceDBName
      Engine: mysql
      MasterUsername: admin # This line is not changed as it is a literal string.
      MasterUserPassword: !Ref InstanceDBPassword
      DBInstanceClass: db.t2.micro # Hardcoded instance class
      AllocatedStorage: '20'
      VPCSecurityGroups: [!Ref DBSecurityGroup]

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Enable HTTP access'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Allow webserver to connect to the database'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WebSecurityGroup

Outputs:
  WebAppURL:
    Description: "URL of the new instance's application"
    Value: !GetAtt EC2Instance.PublicDnsName
